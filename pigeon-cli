#!/usr/bin/env python

import logging
import json
import random
from socket import inet_aton
import sys
import time

import aaargh

from pigeon import Pigeon


logger = logging.getLogger('pigeon')


app = aaargh.App(description="Fast IP geo lookup")
app.arg('--database-dir')


@app.cmd(name='load', help="Load data from a CSV file")
@app.cmd_arg('input', type=file, nargs='?', default=sys.stdin)
def load_data(input, database_dir):
    logger.debug("Loading data from %s", input)
    p = Pigeon(database_dir)
    p.load(input)


@app.cmd(name="lookup")
@app.cmd_arg('ip', help="The IP address to lookup")
def lookup(ip, database_dir):
    p = Pigeon(database_dir)
    N = 100 * 1000
    for x in xrange(N):
        value = json.loads(p.lookup_ip(inet_aton(ip)))

    if value is None:
        print 'no hit'
    else:
        out = json.dumps(value, indent=2)
        print out


@app.cmd(name="shell")
def shell(database_dir):
    p = Pigeon(database_dir)
    while True:
        ip = raw_input('IP: ')
        value = json.loads(p.lookup_ip(inet_aton(ip)))
        if value is None:
            print 'no hit'
        else:
            out = json.dumps(value, indent=2)
            print out


@app.cmd(name='perftest')
@app.cmd_arg('--iterations', default=100 * 1000, type=int,
             help="The number of iterations")
def perftest(iterations, database_dir):
    start_time = time.time()
    p = Pigeon(database_dir)

    for n in xrange(iterations):
        ip = ''.join(chr(random.randint(0, 255)) for i in xrange(4))
        p.lookup_ip(ip)

    elapsed = time.time() - start_time
    print '%d lookups in %.2fs (%.2f req/s)' % (iterations, elapsed, iterations / elapsed)


def main():
    return app.run()


if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    sys.exit(main())
